// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema


// In this project we will use prisma as an ORM for ease of use as well as security
// BTW please setup redis for caching and rate limiting
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String    @unique
  avatar    String
  password  String

  projects      Project[]
  assignedTickets Ticket[]     @relation(name: "AssignedTickets")
  createdTickets Ticket[]
  comments      Comment[]
}

model Project {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  dateCreated DateTime

  admin       User     @relation(fields: [adminId], references: [id])
  adminId     String
  members     User[]   @relation(references: [id])

  tickets     Ticket[]
  tags        Tag[]
  stages      Stage[]  
}

model Ticket {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  creator     User     @relation(fields: [creatorId], references: [id])
  creatorId   String
  assignedUser User?   @relation(name: "AssignedTickets", fields: [assignedUserId], references: [id])
  assignedUserId String?

  stage       Stage     @relation(fields: [stageId], references: [id])
  stageId     String

  parent      Ticket?   @relation(name: "ParentTicket", fields: [parentId], references: [id])
  parentId    String?

  comments Comment[]

  @@index([title])
}

model Tag {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  title String @unique
  level String
}

model Stage {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  title String @unique
}

model Comment {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  dateCreated DateTime
  ticket     Ticket   @relation(fields: [ticketId], references: [id])
  ticketId   String
}
